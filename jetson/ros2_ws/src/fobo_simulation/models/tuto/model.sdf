<?xml version='1.0'?>
<sdf version='1.7'>
  <model name="tuto">
    <static>false</static>

    <link name="base_footprint"/>

    <joint name="base_joint" type="fixed">
      <parent>base_footprint</parent>
      <child>base_link</child>
      <pose>0.0 0.0 0.010 0 0 0</pose>
    </joint>

    <link name='base_link'>
      <pose>0 0 .1 0 0 0</pose>
    
      <collision name='collision'>
        <geometry>
          <box>
            <size>.4 .2 .1</size>
          </box>
          <pose>-0.15 0 .1 0 0 0</pose>
          <box>
            <size>0.1 .2 .1</size>
          </box>
        </geometry>
      </collision>
    
      <visual name='visual'>
        <geometry>
          <box>
            <size>.4 .2 .1</size>
          </box>
        </geometry>
      </visual>

      <visual name='front_up'>
      <pose>-0.15 0 .1 0 0 0</pose>
        <geometry>
          <box>
            <size>0.1 .2 .1</size>
          </box>
        </geometry>
      </visual>

      <collision name='caster_collision'>
        <pose>-0.15 0 -0.05 0 0 0</pose>
        <geometry>
            <sphere>
            <radius>.05</radius>
          </sphere>
        </geometry>
      
        <surface>
          <friction>
            <ode>
              <mu>0</mu>
              <mu2>0</mu2>
              <slip1>1.0</slip1>
              <slip2>1.0</slip2>
            </ode>
          </friction>
        </surface>
      </collision>
      
      <visual name='caster_visual'>
        <pose>-0.15 0 -0.05 0 0 0</pose>
        <geometry>
          <sphere>
            <radius>.05</radius>
          </sphere>
        </geometry>
      </visual>
    </link>


    <link name="wheel_left_link">
      <pose>0.1 0.13 0.1 0 1.5707 1.5707</pose>
      <collision name="collision">
        <geometry>
          <cylinder>
            <radius>.1</radius>
            <length>.05</length>
          </cylinder>
        </geometry>
      </collision>
      <visual name="visual">
        <geometry>
          <cylinder>
            <radius>.1</radius>
            <length>.05</length>
          </cylinder>
        </geometry>
      </visual>
    </link>

    <link name="wheel_right_link">
      <pose>0.1 -0.13 0.1 0 1.5707 1.5707</pose>
      <collision name="collision">
        <geometry>
          <cylinder>
            <radius>.1</radius>
            <length>.05</length>
          </cylinder>
        </geometry>
      </collision>
      <visual name="visual">
        <geometry>
          <cylinder>
            <radius>.1</radius>
            <length>.05</length>
          </cylinder>
        </geometry>
      </visual>
    </link>

    <joint type="revolute" name="wheel_left_joint">
      <pose>0 0 -0.03 0 0 0</pose>
      <parent>base_link</parent>
      <child>wheel_left_link</child>
      <axis>
        <xyz>0 0 -1</xyz>
      </axis>
    </joint>
    
    <joint type="revolute" name="wheel_right_joint">
      <pose>0 0 0.03 0 0 0</pose>
      <parent>base_link</parent>
      <child>wheel_right_link</child>
      <axis>
        <xyz>0 0 -1</xyz>
      </axis>
    </joint>


    <link name="camera_link">
      <pose>-0.15 0 .3 0 0 0</pose>
      <collision name="collision">
        <geometry>
          <box>
            <size>0.05 .1 .05</size>
          </box>
        </geometry>
      </collision>
      <visual name="visual">
        <geometry>
          <box>
            <size>0.05 .1 .05</size>
          </box>
        </geometry>
      </visual>

      <sensor name="depth_camera" type="camera">
        <always_on>true</always_on>
        <visualize>false</visualize>
        <update_rate>5</update_rate>
        <camera name="camera">
          <horizontal_fov>1.02974</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>10</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
                That pixel's noise value is added to each of its color
                  channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="depth_camera_controller" filename="libgazebo_ros_camera.so">
          <camera_name>camera_link</camera_name>
          <frame_name>camera_link_frame</frame_name>
          <hack_baseline>0</hack_baseline>
          <min_depth>0.001</min_depth>
        </plugin>
      </sensor>
    </link>

    <joint type="revolute" name="camera_base_joint">
      <pose>-0.15 0 .3 0 0 0</pose>
      <parent>base_link</parent>
      <child>camera_link</child>
      <axis>
        <xyz>1 0 0</xyz>
      </axis>
    </joint>

    <transmission name="camera_base_tran">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="camera_base_joint">
        <hardwareInterface>EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="camera_base">
        <mechanicalReduction>1.0</mechanicalReduction>
        <hardwareInterface>EffortJointInterface</hardwareInterface>
      </actuator>
    </transmission>

    <gazebo>
      <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
        <robotNamespace>/fobo</robotNamespace>
      </plugin>
    </gazebo>

    <!-- Controls the differential drive robot -->
    <plugin name='diff_drive' filename='libgazebo_ros_diff_drive.so'>
      <ros>
        <namespace>/fobo</namespace>
        <remapping>cmd_vel:=cmd_vel</remapping>
        <remapping>odom:=odom</remapping>
      </ros>

      <!-- wheels -->
      <left_joint>wheel_left_joint</left_joint>
      <right_joint>wheel_right_joint</right_joint>

      <!-- kinematics -->
      <wheel_separation>0.26</wheel_separation>
      <wheel_diameter>0.2</wheel_diameter>

      <!-- limits -->
      <max_wheel_torque>20</max_wheel_torque>
      <max_wheel_acceleration>1.0</max_wheel_acceleration>

      <!-- output -->
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>true</publish_wheel_tf>

      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>chassis</robot_base_frame>
    </plugin>
  </model>
</sdf>